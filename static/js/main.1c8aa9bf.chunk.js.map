{"version":3,"sources":["components/pages/landing/LandingPage.tsx","recoil/atoms/GameConfig.ts","recoil/effects/LocalStorage.ts","hooks/useLocalStorageRecoilState.ts","recoil/atoms/GameState.ts","components/pages/game-config/GameConfigPage.tsx","components/pages/game/Timer.tsx","components/pages/game/NumberPad.tsx","recoil/selectors/Graph.ts","components/pages/game/Graph.tsx","components/common/NakedButton.tsx","components/common/IconButton.tsx","icons/backspace.svg","components/pages/game/History.tsx","recoil/selectors/Progress.ts","components/pages/game/ProgressBar.tsx","icons/stop.svg","icons/pause.svg","components/pages/game/GamePage.tsx","App.tsx","index.tsx"],"names":["StyledDiv","styled","div","LandingPage","to","ProgressMode","localStorageEffect","key","setSelf","onSet","savedValue","JSON","parse","localStorage","getItem","newValue","DefaultValue","removeItem","setItem","stringify","progressModeAtom","atom","default","Sinks","effects_UNSTABLE","progressGoalAtom","putterCountAtom","rollingAverageDepthAtom","graphDepthAtom","upperBoundAtom","lowerBoundAtom","useLocalStorageRecoilState","useRecoilState","value","setValue","useState","loadedFromCache","setLoadedFromCache","useEffect","storedValue","useMemo","timeElapsedAtom","historyAtom","GameConfigPage","progressMode","setProgressMode","progressCount","setProgressCount","putterCount","setPutterCount","resetRecoilState","useResetRecoilState","resetTimeElapsed","name","id","onChange","e","target","Throws","type","parseInt","formatTime","time","secondsElapsed","Math","floor","minutesElapsed","remainderSeconds","formattedSeconds","Timer","timeElapsed","setTimeElapsed","Date","now","lastTickTime","setLastTickTime","timeout","setTimeout","clearTimeout","NumberPad","setHistory","useSetRecoilState","Array","keys","map","i","onClick","history","graphSelector","selector","get","rollingAverageDepth","graphDepth","adjustedAvgDept","ceil","graphData","index","max","length","start","localHistory","slice","puttsMade","reduce","accumulator","currentValue","totalPutts","push","Graph","data","useRecoilValue","upperBound","lowerBound","width","window","screen","getYCoord","toFixed","upperBoundY","lowerBoundY","points","y","x","getCoord","join","height","fill","stroke","strokeWidth","button","StyledNakedButton","NakedButton","IconButton","title","src","alt","History","successes","BackspaceIcon","oldHistory","progressSelector","props","$progressPercent","ProgressBar","progress","progressGoal","className","GamePage","StopIcon","PauseIcon","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c8aa9bf.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst StyledDiv = styled.div``;\n\nexport default function LandingPage() {\n  return (\n    <StyledDiv>\n      <Link to=\"/game-config\">Start</Link>\n    </StyledDiv>\n  );\n}\n","import { atom } from \"recoil\";\nimport { localStorageEffect } from \"../effects/LocalStorage\";\n\nexport enum ProgressMode {\n  Sinks = \"SINKS\",\n  Throws = \"THROWS\",\n}\n\nexport const progressModeAtom = atom<ProgressMode>({\n  key: \"progress-mode\",\n  default: ProgressMode.Sinks,\n  effects_UNSTABLE: [localStorageEffect(\"progress-mode\")],\n});\n\nexport const progressGoalAtom = atom<number>({\n  key: \"progress-goal\",\n  default: 100,\n  effects_UNSTABLE: [localStorageEffect(\"progress-goal\")],\n});\n\nexport const putterCountAtom = atom<number>({\n  key: \"putter-count\",\n  default: 3,\n  effects_UNSTABLE: [localStorageEffect(\"putter-count\")],\n});\n\nexport const rollingAverageDepthAtom = atom<number>({\n  key: \"rolling-average-depth\",\n  default: 30,\n  effects_UNSTABLE: [localStorageEffect(\"rolling-average-depth\")],\n});\n\nexport const graphDepthAtom = atom<number>({\n  key: \"graph-depth\",\n  default: 30,\n  effects_UNSTABLE: [localStorageEffect(\"graph-depth\")],\n});\n\nexport const upperBoundAtom = atom<number>({\n  key: \"upper-bound\",\n  default: 0.8,\n  effects_UNSTABLE: [localStorageEffect(\"upper-bound\")],\n});\n\nexport const lowerBoundAtom = atom<number>({\n  key: \"lower-bound\",\n  default: 0.6,\n  effects_UNSTABLE: [localStorageEffect(\"lower-bound\")],\n});\n","import { DefaultValue } from \"recoil\";\n\nexport const localStorageEffect =\n  (key: string) =>\n  ({\n    setSelf,\n    onSet,\n  }: {\n    setSelf: (value: any) => void;\n    onSet: (effect: (newValue: any) => void) => void;\n  }) => {\n    const savedValue = JSON.parse(localStorage.getItem(key) ?? \"null\");\n\n    if (savedValue !== null) {\n      setSelf(savedValue);\n    }\n\n    onSet((newValue: any) => {\n      if (newValue instanceof DefaultValue) {\n        localStorage.removeItem(key);\n      } else {\n        localStorage.setItem(key, JSON.stringify(newValue));\n      }\n    });\n  };\n","import { RecoilState, SetterOrUpdater, useRecoilState } from \"recoil\";\nimport { useEffect, useMemo, useState } from \"react\";\n\nexport default function useLocalStorageRecoilState<T>(\n  atom: RecoilState<T>\n): [T, SetterOrUpdater<T>] {\n  const [value, setValue] = useRecoilState<T>(atom);\n  const [loadedFromCache, setLoadedFromCache] = useState(false);\n\n  useEffect(() => {\n    const storedValue = JSON.parse(localStorage.getItem(atom.key) ?? \"null\");\n    if (storedValue) {\n      setValue(storedValue);\n    }\n    setLoadedFromCache(true);\n  }, [atom.key, setValue]);\n\n  useEffect(() => {\n    if (!loadedFromCache) {\n      return;\n    }\n\n    localStorage.setItem(atom.key, JSON.stringify(value));\n  }, [atom.key, value, loadedFromCache]);\n\n  return useMemo(() => [value, setValue], [value, setValue]);\n}\n","import { atom } from \"recoil\";\nimport { localStorageEffect } from \"../effects/LocalStorage\";\n\nexport const timeElapsedAtom = atom({\n  key: \"time-elapsed\",\n  default: 0,\n  effects_UNSTABLE: [localStorageEffect(\"time-elapsed\")],\n});\n\nexport const historyAtom = atom<number[]>({\n  key: \"history\",\n  default: [],\n  effects_UNSTABLE: [localStorageEffect(\"history\")],\n});\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  progressGoalAtom,\n  ProgressMode,\n  progressModeAtom,\n  putterCountAtom,\n} from \"../../../recoil/atoms/GameConfig\";\nimport useLocalStorageRecoilState from \"../../../hooks/useLocalStorageRecoilState\";\nimport { Link } from \"react-router-dom\";\nimport { historyAtom, timeElapsedAtom } from \"../../../recoil/atoms/GameState\";\nimport { useResetRecoilState } from \"recoil\";\n\nconst StyledDiv = styled.div``;\n\nexport default function GameConfigPage() {\n  const [progressMode, setProgressMode] =\n    useLocalStorageRecoilState<ProgressMode>(progressModeAtom);\n\n  const [progressCount, setProgressCount] =\n    useLocalStorageRecoilState<number>(progressGoalAtom);\n\n  const [putterCount, setPutterCount] =\n    useLocalStorageRecoilState<number>(putterCountAtom);\n\n  const resetRecoilState = useResetRecoilState(historyAtom);\n  const resetTimeElapsed = useResetRecoilState(timeElapsedAtom);\n\n  useEffect(() => {\n    resetRecoilState();\n    resetTimeElapsed();\n  }, [resetRecoilState, resetTimeElapsed]);\n\n  return (\n    <StyledDiv>\n      <div>\n        <span>I want to</span>\n        <select\n          name=\"progress-mode\"\n          id=\"progress-mode\"\n          value={progressMode}\n          onChange={(e) => {\n            setProgressMode(e.target.value as ProgressMode);\n          }}\n        >\n          <option value={ProgressMode.Sinks}>sink</option>\n          <option value={ProgressMode.Throws}>throw</option>\n        </select>\n        <input\n          name=\"progress-count\"\n          id=\"progress-count\"\n          type=\"number\"\n          value={progressCount}\n          onChange={(e) => {\n            setProgressCount(parseInt(e.target.value));\n          }}\n        />\n        <span>putts.</span>\n      </div>\n      <div>\n        <span>I have</span>\n        <input\n          name=\"putter-count\"\n          id=\"putter-count\"\n          type=\"number\"\n          value={putterCount}\n          onChange={(e) => {\n            setPutterCount(parseInt(e.target.value));\n          }}\n        />\n        <span>putters.</span>\n      </div>\n      <Link to=\"/game\">Let's putt!</Link>\n    </StyledDiv>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { timeElapsedAtom } from \"../../../recoil/atoms/GameState\";\nimport { useRecoilState } from \"recoil\";\n\nconst StyledDiv = styled.div`\n  font-weight: bold;\n  font-size: 24px;\n`;\n\nfunction formatTime(time: number): string {\n  const secondsElapsed = Math.floor(time / 1000);\n  const minutesElapsed = Math.floor(secondsElapsed / 60);\n  const remainderSeconds = secondsElapsed % 60;\n\n  const formattedSeconds =\n    remainderSeconds < 10 ? `0${remainderSeconds}` : remainderSeconds;\n\n  return `${minutesElapsed}:${formattedSeconds}`;\n}\n\nexport default function Timer() {\n  const [timeElapsed, setTimeElapsed] = useRecoilState(timeElapsedAtom);\n\n  const [lastTickTime, setLastTickTime] = useState(Date.now());\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      const now = Date.now();\n      const timeSinceLastTick = now - lastTickTime;\n\n      setTimeElapsed(timeElapsed + timeSinceLastTick);\n      setLastTickTime(now);\n    }, 1000);\n    return () => clearTimeout(timeout);\n  }, [setTimeElapsed, timeElapsed, lastTickTime]);\n\n  return <StyledDiv>{formatTime(timeElapsed)}</StyledDiv>;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\nimport { putterCountAtom } from \"../../../recoil/atoms/GameConfig\";\nimport { historyAtom } from \"../../../recoil/atoms/GameState\";\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 4px;\n  max-height: 50vh;\n  overflow: auto;\n\n  button {\n    height: 80px;\n    flex: 1;\n    min-width: calc(33.333% - 8px);\n    margin: 4px;\n    font-size: 32px;\n    font-weight: bold;\n    border-radius: 16px;\n  }\n`;\n\nexport default function NumberPad() {\n  const [putterCount] = useRecoilState(putterCountAtom);\n  const setHistory = useSetRecoilState(historyAtom);\n\n  return (\n    <StyledDiv>\n      {[...Array(putterCount + 1).keys()].map((i) => (\n        <button\n          key={i}\n          onClick={() => setHistory((history) => [...history, i])}\n        >\n          {i}\n        </button>\n      ))}\n    </StyledDiv>\n  );\n}\n","import { selector } from \"recoil\";\nimport { historyAtom } from \"../atoms/GameState\";\nimport {\n  graphDepthAtom,\n  putterCountAtom,\n  rollingAverageDepthAtom,\n} from \"../atoms/GameConfig\";\n\nexport const graphSelector = selector({\n  key: \"graph\",\n  get: ({ get }) => {\n    const history = get(historyAtom);\n    const rollingAverageDepth = get(rollingAverageDepthAtom);\n    const graphDepth = get(graphDepthAtom);\n    const putterCount = get(putterCountAtom);\n\n    const adjustedAvgDept = Math.ceil(rollingAverageDepth / putterCount);\n\n    const graphData = [];\n\n    for (\n      let index = Math.max(0, history.length - graphDepth);\n      index < history.length;\n      index++\n    ) {\n      const start = Math.max(0, index - adjustedAvgDept + 1);\n      const localHistory = history.slice(start, index + 1);\n\n      const puttsMade = localHistory.reduce(\n        (accumulator, currentValue) => accumulator + currentValue,\n        0\n      );\n\n      const totalPutts = localHistory.length * putterCount;\n\n      graphData.push(puttsMade / totalPutts);\n    }\n\n    return graphData;\n  },\n});\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useRecoilValue } from \"recoil\";\nimport { graphSelector } from \"../../../recoil/selectors/Graph\";\nimport {\n  graphDepthAtom,\n  lowerBoundAtom,\n  upperBoundAtom,\n} from \"../../../recoil/atoms/GameConfig\";\n\nconst StyledDiv = styled.div`\n  flex: 1;\n`;\n\nexport default function Graph() {\n  const data = useRecoilValue(graphSelector);\n  const graphDepth = useRecoilValue(graphDepthAtom);\n  const upperBound = useRecoilValue(upperBoundAtom);\n  const lowerBound = useRecoilValue(lowerBoundAtom);\n\n  const width = window.screen.width;\n  const height = 400;\n\n  function getYCoord(value: number) {\n    return (2 + height - value * height).toFixed(1);\n  }\n\n  function getCoord(value: number, index: number): string {\n    const y = getYCoord(value);\n    const x = ((width / graphDepth) * index).toFixed(1);\n    return `${x},${y}`;\n  }\n\n  const upperBoundY = getYCoord(upperBound);\n  const lowerBoundY = getYCoord(lowerBound);\n\n  const points = data.map((value, index) => getCoord(value, index)).join(\" \");\n\n  return (\n    <StyledDiv>\n      <svg width={width} height={height + 4}>\n        <polyline\n          points={`0,${upperBoundY} ${width},${upperBoundY} ${width},${lowerBoundY} 0,${lowerBoundY}`}\n          fill=\"lightgreen\"\n        />\n        <polyline points={points} fill=\"none\" stroke=\"black\" strokeWidth={2} />\n      </svg>\n    </StyledDiv>\n  );\n}\n","import styled from \"styled-components\";\n\nexport default styled.button`\n  background: none;\n  border: none;\n  padding: 0;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport NakedButton from \"./NakedButton\";\n\nconst StyledNakedButton = styled(NakedButton)`\n  margin-bottom: -4px;\n\n  img {\n    width: 40px;\n    height: 40px;\n  }\n`;\n\ninterface IconButtonProps {\n  title: string;\n  src: string;\n  onClick: () => void;\n}\n\nexport default function IconButton({ title, src, onClick }: IconButtonProps) {\n  return (\n    <StyledNakedButton title={title} onClick={onClick}>\n      <img src={src} alt=\"\" />\n    </StyledNakedButton>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/backspace.2eabbca1.svg\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport { historyAtom } from \"../../../recoil/atoms/GameState\";\nimport IconButton from \"../../common/IconButton\";\nimport BackspaceIcon from \"../../../icons/backspace.svg\";\nimport { useRecoilState } from \"recoil\";\n\nconst StyledDiv = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  overflow: hidden;\n  padding: 8px 8px 0 0;\n\n  div {\n    padding: 4px;\n    background-color: palegoldenrod;\n    border-radius: 50%;\n    flex-shrink: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-right: 4px;\n    width: 20px;\n    height: 20px;\n  }\n`;\n\nexport default function History() {\n  const [history, setHistory] = useRecoilState(historyAtom);\n\n  return (\n    <StyledDiv>\n      {history.map((successes, index) => (\n        <div key={`history-${index}`}>{successes}</div>\n      ))}\n      <IconButton\n        title=\"Delete history entry\"\n        src={BackspaceIcon}\n        onClick={() =>\n          setHistory((oldHistory) => oldHistory.slice(0, oldHistory.length - 1))\n        }\n      />\n    </StyledDiv>\n  );\n}\n","import { selector } from \"recoil\";\nimport {\n  ProgressMode,\n  progressModeAtom,\n  putterCountAtom,\n} from \"../atoms/GameConfig\";\nimport { historyAtom } from \"../atoms/GameState\";\n\nexport const progressSelector = selector({\n  key: \"progress\",\n  get: ({ get }) => {\n    const progressMode = get(progressModeAtom);\n    const history = get(historyAtom);\n    const putterCount = get(putterCountAtom);\n\n    switch (progressMode) {\n      case ProgressMode.Sinks:\n        return history.reduce(\n          (accumulator, currentValue) => accumulator + currentValue,\n          0\n        );\n      case ProgressMode.Throws:\n        return history.length * putterCount;\n    }\n  },\n});\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useRecoilValue } from \"recoil\";\nimport { progressSelector } from \"../../../recoil/selectors/Progress\";\nimport useLocalStorageRecoilState from \"../../../hooks/useLocalStorageRecoilState\";\nimport { progressGoalAtom } from \"../../../recoil/atoms/GameConfig\";\n\ninterface StyledDivProps {\n  $progressPercent: number;\n}\n\nconst StyledDiv = styled.div<StyledDivProps>`\n  position: relative;\n  overflow: hidden;\n\n  .text {\n    font-size: 24px;\n    margin: 0 0 4px 8px;\n  }\n\n  .bar {\n    z-index: -1;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    background: lightsalmon;\n    transform-origin: left;\n    transform: scaleX(${(props) => props.$progressPercent});\n    transition: transform 0.5s cubic-bezier(0.33, 1, 0.68, 1);\n  }\n`;\n\nexport default function ProgressBar() {\n  const progress = useRecoilValue(progressSelector);\n  const [progressGoal] = useLocalStorageRecoilState(progressGoalAtom);\n\n  return (\n    <StyledDiv $progressPercent={progress / progressGoal}>\n      <div className=\"bar\" />\n      <div className=\"text\">{`${progress} / ${progressGoal}`}</div>\n    </StyledDiv>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/stop.81431bae.svg\";","export default __webpack_public_path__ + \"static/media/pause.b87cfe89.svg\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport Timer from \"./Timer\";\nimport NumberPad from \"./NumberPad\";\nimport Graph from \"./Graph\";\nimport History from \"./History\";\nimport ProgressBar from \"./ProgressBar\";\nimport IconButton from \"../../common/IconButton\";\nimport StopIcon from \"../../../icons/stop.svg\";\nimport PauseIcon from \"../../../icons/pause.svg\";\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n\n  .header {\n    display: flex;\n    align-items: center;\n  }\n`;\n\nexport default function GamePage() {\n  return (\n    <StyledDiv>\n      <ProgressBar />\n      <div className=\"header\">\n        <IconButton title=\"Stop game\" src={StopIcon} onClick={() => {}} />\n        <IconButton title=\"Pause game\" src={PauseIcon} onClick={() => {}} />\n        <Timer />\n      </div>\n      <Graph />\n      <History />\n      <NumberPad />\n    </StyledDiv>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport LandingPage from \"./components/pages/landing/LandingPage\";\nimport GameConfigPage from \"./components/pages/game-config/GameConfigPage\";\nimport GamePage from \"./components/pages/game/GamePage\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/game-config\">\n          <GameConfigPage />\n        </Route>\n        <Route path=\"/game\">\n          <GamePage />\n        </Route>\n        <Route path=\"/\">\n          <LandingPage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { RecoilRoot } from \"recoil\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}